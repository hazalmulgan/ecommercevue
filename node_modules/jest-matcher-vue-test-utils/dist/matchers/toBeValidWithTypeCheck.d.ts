import Vue from "vue";
import { MatcherResult, MatcherComponent, MatcherComponentOptions } from "../utils";
declare global {
    namespace jest {
        interface Matchers<R, T> {
            /**
             * Asserts that the component accepts the type for the single prop
             * @param {string} prop - The prop's name
             * @param {any} type - The type (String|Number|Boolean|Array|Object|Date|Function|Symbol|[your prototype instance])
             * @param options - Mount Option of the component
             * @example
             * expect(AComponent).toBeValidPropWithTypeCheck("color", String)
             */
            toBeValidPropWithTypeCheck(prop: string, type: any | any[], options?: MatcherComponentOptions<Vue>): R;
        }
    }
}
export default function toBeValidPropWithTypeCheck<V extends Vue>(received: MatcherComponent<V>, propName: string, value: any, dynamicMountOptions?: MatcherComponentOptions<V>): MatcherResult;
